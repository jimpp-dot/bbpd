From c1efe8ef39d8080d30f656252d4453107976aec4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E7=8E=8B=E5=8B=87?= <wangyong@meizu.com>
Date: Wed, 12 Oct 2022 10:32:40 +0800
Subject: [PATCH] 
 1.https://bugly.qq.com/v2/crash-reporting/errors/1d103c767f/4285422?pid=1

---
 .../webviewflutter/WebViewHostApiImpl.java    | 31 +++++++++++++++++--
 1 file changed, 28 insertions(+), 3 deletions(-)

diff --git a/game_base/bbcore/plugins/webview_flutter/webview_flutter_android/android/src/main/java/io/flutter/plugins/webviewflutter/WebViewHostApiImpl.java b/game_base/bbcore/plugins/webview_flutter/webview_flutter_android/android/src/main/java/io/flutter/plugins/webviewflutter/WebViewHostApiImpl.java
index 2098f8dcb..290096b5e 100644
--- a/game_base/bbcore/plugins/webview_flutter/webview_flutter_android/android/src/main/java/io/flutter/plugins/webviewflutter/WebViewHostApiImpl.java
+++ b/game_base/bbcore/plugins/webview_flutter/webview_flutter_android/android/src/main/java/io/flutter/plugins/webviewflutter/WebViewHostApiImpl.java
@@ -22,6 +22,7 @@ import io.flutter.plugin.platform.PlatformView;
 import io.flutter.plugins.webviewflutter.DownloadListenerHostApiImpl.DownloadListenerImpl;
 import io.flutter.plugins.webviewflutter.GeneratedAndroidWebView.WebViewHostApi;
 import io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl.WebChromeClientImpl;
+import io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl.WebChromeClientDefaultImpl;
 import io.flutter.plugins.webviewflutter.WebViewClientHostApiImpl.ReleasableWebViewClient;
 import java.util.HashMap;
 import java.util.Map;
@@ -108,6 +109,8 @@ public class WebViewHostApiImpl implements WebViewHostApi {
         new ReleasableValue<>();
     private final ReleasableValue<WebChromeClientImpl> currentWebChromeClient =
         new ReleasableValue<>();
+    private final ReleasableValue<WebChromeClientDefaultImpl> currentWebChromeClientDefault =
+            new ReleasableValue<>();
     private final Map<String, ReleasableValue<JavaScriptChannel>> javaScriptInterfaces =
         new HashMap<>();
 
@@ -137,7 +140,12 @@ public class WebViewHostApiImpl implements WebViewHostApi {
 
       final WebChromeClientImpl webChromeClient = currentWebChromeClient.get();
       if (webChromeClient != null) {
-        ((WebChromeClientImpl) webChromeClient).setWebViewClient(webViewClient);
+        webChromeClient.setWebViewClient(webViewClient);
+      } else {
+        final WebChromeClientDefaultImpl webChromeClientDefault = currentWebChromeClientDefault.get();
+        if (webChromeClientDefault != null) {
+          webChromeClientDefault.setWebViewClient(webViewClient);
+        }
       }
     }
 
@@ -150,7 +158,11 @@ public class WebViewHostApiImpl implements WebViewHostApi {
     @Override
     public void setWebChromeClient(WebChromeClient client) {
       super.setWebChromeClient(client);
-      currentWebChromeClient.set((WebChromeClientImpl) client);
+      if (client instanceof  WebChromeClientImpl) {
+        currentWebChromeClient.set((WebChromeClientImpl) client);
+      } else if (client instanceof WebChromeClientDefaultImpl) {
+        currentWebChromeClientDefault.set((WebChromeClientDefaultImpl) client);
+      }
     }
 
     @SuppressLint("JavascriptInterface")
@@ -179,6 +191,7 @@ public class WebViewHostApiImpl implements WebViewHostApi {
       currentWebViewClient.release();
       currentDownloadListener.release();
       currentWebChromeClient.release();
+      currentWebChromeClientDefault.release();
       for (ReleasableValue<JavaScriptChannel> channel : javaScriptInterfaces.values()) {
         channel.release();
       }
@@ -199,6 +212,8 @@ public class WebViewHostApiImpl implements WebViewHostApi {
         new ReleasableValue<>();
     private final ReleasableValue<WebChromeClientImpl> currentWebChromeClient =
         new ReleasableValue<>();
+    private final ReleasableValue<WebChromeClientDefaultImpl> currentWebChromeClientDefault =
+            new ReleasableValue<>();
     private final Map<String, ReleasableValue<JavaScriptChannel>> javaScriptInterfaces =
         new HashMap<>();
 
@@ -250,6 +265,11 @@ public class WebViewHostApiImpl implements WebViewHostApi {
       final WebChromeClientImpl webChromeClient = currentWebChromeClient.get();
       if (webChromeClient != null) {
         webChromeClient.setWebViewClient(webViewClient);
+      } else {
+        final WebChromeClientDefaultImpl webChromeClientDefault = currentWebChromeClientDefault.get();
+        if (webChromeClientDefault != null) {
+          webChromeClientDefault.setWebViewClient(webViewClient);
+        }
       }
     }
 
@@ -262,7 +282,11 @@ public class WebViewHostApiImpl implements WebViewHostApi {
     @Override
     public void setWebChromeClient(WebChromeClient client) {
       super.setWebChromeClient(client);
-      currentWebChromeClient.set((WebChromeClientImpl) client);
+      if (client instanceof WebChromeClientImpl) {
+        currentWebChromeClient.set((WebChromeClientImpl) client);
+      } else if (client instanceof WebChromeClientDefaultImpl) {
+        currentWebChromeClientDefault.set((WebChromeClientDefaultImpl) client);
+      }
     }
 
     @SuppressLint("JavascriptInterface")
@@ -291,6 +315,7 @@ public class WebViewHostApiImpl implements WebViewHostApi {
       currentWebViewClient.release();
       currentDownloadListener.release();
       currentWebChromeClient.release();
+      currentWebChromeClientDefault.release();
       for (ReleasableValue<JavaScriptChannel> channel : javaScriptInterfaces.values()) {
         channel.release();
       }
-- 
2.19.2

