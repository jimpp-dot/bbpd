syntax = "proto3";
package pb;

//表示目标文件生成的路径, go的包名就是最后的目录名
//目前统一生成到 app/pb 目录下
option go_package = "../app/pb";


import "json_key/broadcast_extension.proto";

// 0 初始化,1 等待领唱开始,  2 领唱中, 3  抢合唱成功, 4 合唱中,  5 结算中
enum LeadSingState {
  LEAD_SING_STATE_INIT = 0; //初始化
  LEAD_SING_STATE_WAIT = 1; //等待领唱开始演唱
  LEAD_SING_STATE_LEAD = 2; //领唱中(这个状态且离下一个point大于5s才可以抢)
  LEAD_SING_STATE_GRAB = 3; //抢合唱成功
  LEAD_SING_STATE_SING = 4; //合唱中
  LEAD_SING_STAGE_RANK = 5; //结算排行榜
}

//歌手信息
message SingUser {
  uint32 uid = 1;
  string name = 2;
  string icon = 3;
  uint32 sex = 4;
  uint32 hot = 5; //热度
}

//歌曲分割点
message SongPoint {
  uint32 point_id = 1;
  uint32 point_val = 2;
}

//演唱的歌曲信息
message SongInfo {
  string song_id = 1; //歌曲ID
  string song_name = 2; //歌曲名称
  string song_lrc_url = 3; //歌词地址
  string song_url = 4; //歌曲播放地址
  uint32 duration = 5; //总时长
  repeated SongPoint point = 6; //歌曲分割点
  string accompany_url = 7; //伴奏URL
  string artist_name = 8; //歌手名称
}

message LeadSingConfigData {
    option (pb.register_name) = 'lead.sing.state.refresh';
    option (pb.register_id) = 30009;
    LeadSingState room_state = 1; //房间状态
    SongInfo song_info = 2; //演唱中的歌曲信息
    SingUser lead_user = 3; //领唱用户信息
    SingUser partner_user = 4; //合唱用户信息
    uint32 cycle_id = 5; //演唱轮次标识
    uint32 order_num = 6; //点歌数量
}

message ResLeadSingConfig {
  bool success = 1;                    //成功true，失败false
  string msg = 2;                      //失败message
  LeadSingConfigData data = 3;
}

message LeadSingSongNumData {
  option (pb.register_name) = 'lead.sing.order.refresh';
  option (pb.register_id) = 30010;
  uint32 order_num = 1; //点歌数量
}

message LeadSingUserHotData {
  option (pb.register_name) = 'lead.sing.hot.refresh';
  option (pb.register_id) = 30011;
  uint32 uid = 1;
  uint32 hot = 2;
}

message LeadRankRsp {
  bool success = 1;
  string msg = 2;
  repeated LeadRankData data = 3;
}

message LeadRankData {
  uint32 uid = 1;
  string icon = 2; //用户头像
  string name = 3;
  uint32 rankId = 4; //用户排名
  uint32 hot = 5;
}


